{"ast":null,"code":"var _jsxFileName = \"/Users/briansuruki/Web/Projects/mern-todo-app/client/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect, useCallback } from 'react';\nimport ClearButton from './components/todo/ClearButton';\nimport Modal from './components/ui/Modal';\nimport Backdrop from './components/ui/Backdrop';\nimport TodoList from './components/todo/TodoList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [todos, setTodos] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n  const fetchTodoshandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API}/todos`);\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n      const data = await response.json();\n      setTodos(data);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n  useEffect(() => {\n    fetchTodoshandler();\n  }, [fetchTodoshandler]);\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n  function closeModalHandler() {\n    setModalIsOpen(false);\n  }\n  async function addTodoHandler(todo) {\n    const response = await fetch(`${process.env.REACT_APP_API}/todos`, {\n      method: 'POST',\n      body: JSON.stringify(todo),\n      header: {\n        'Content-Type': 'application/json'\n      }\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"To-Do List\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TodoList, {\n      todos: todos,\n      isLoading: isLoading,\n      error: error,\n      fetchTodos: fetchTodoshandler,\n      setTodos: setTodos\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClearButton, {\n      onClick: deleteHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Modal, {\n      onCancel: closeModalHandler,\n      onConfirm: closeModalHandler,\n      getTasks: fetchTodoshandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), modalIsOpen && /*#__PURE__*/_jsxDEV(Backdrop, {\n      onClick: closeModalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Khl+ChYPNUPNX897uycHuBTEzms=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","useCallback","ClearButton","Modal","Backdrop","TodoList","App","todos","setTodos","modalIsOpen","setModalIsOpen","isLoading","setIsLoading","error","setError","fetchTodoshandler","response","fetch","process","env","REACT_APP_API","ok","Error","data","json","message","deleteHandler","closeModalHandler","addTodoHandler","todo","method","body","JSON","stringify","header","console","log"],"sources":["/Users/briansuruki/Web/Projects/mern-todo-app/client/src/App.js"],"sourcesContent":["import { useState, useEffect, useCallback } from 'react';\n\nimport ClearButton from './components/todo/ClearButton';\nimport Modal from './components/ui/Modal';\nimport Backdrop from './components/ui/Backdrop';\nimport TodoList from './components/todo/TodoList';\n\nfunction App() {\n  const [todos, setTodos] = useState([]);\n  const [modalIsOpen, setModalIsOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  const fetchTodoshandler = useCallback(async () => {\n    setIsLoading(true);\n    setError(null);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API}/todos`);\n      if (!response.ok) {\n        throw new Error('Something went wrong!');\n      }\n\n      const data = await response.json();\n\n      setTodos(data);\n    } catch (error) {\n      setError(error.message);\n    }\n    setIsLoading(false);\n  }, []);\n\n  useEffect(() => {\n    fetchTodoshandler();\n  }, [fetchTodoshandler]);\n\n  function deleteHandler() {\n    setModalIsOpen(true);\n  }\n  function closeModalHandler() {\n    setModalIsOpen(false);\n  }\n\n  async function addTodoHandler(todo) {\n    const response = await fetch(`${process.env.REACT_APP_API}/todos`, {\n      method: 'POST',\n      body: JSON.stringify(todo),\n      header: {\n        'Content-Type': 'application/json',\n      },\n    });\n    const data = await response.json();\n    console.log(data);\n  }\n\n  return (\n    <div className=\"main\">\n      <h1>To-Do List</h1>\n      <TodoList\n        todos={todos}\n        isLoading={isLoading}\n        error={error}\n        fetchTodos={fetchTodoshandler}\n        setTodos={setTodos}\n      />\n      <ClearButton onClick={deleteHandler} />\n      {modalIsOpen && (\n        <Modal\n          onCancel={closeModalHandler}\n          onConfirm={closeModalHandler}\n          getTasks={fetchTodoshandler}\n        />\n      )}\n      {modalIsOpen && <Backdrop onClick={closeModalHandler} />}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}